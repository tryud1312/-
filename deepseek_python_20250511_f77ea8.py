import tweepy
from telegram import Bot, Update
from telegram.ext import Updater, CommandHandler, CallbackContext
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Twitter API (–ø–æ–ª—É—á–∏—Ç–µ –Ω–∞ developer.twitter.com)
TWITTER_API_KEY = "–í–ê–®_API_KEY"
TWITTER_API_SECRET = "–í–ê–®_API_SECRET"
TWITTER_ACCESS_TOKEN = "–í–ê–®_ACCESS_TOKEN"
TWITTER_ACCESS_SECRET = "–í–ê–®_ACCESS_SECRET"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞ (—Ç–æ–∫–µ–Ω –æ—Ç @BotFather)
TELEGRAM_TOKEN = "–í–ê–®_TELEGRAM_TOKEN"
TELEGRAM_CHAT_ID = "–í–ê–®_CHAT_ID"  # –£–∑–Ω–∞—Ç—å —á–µ—Ä–µ–∑ @userinfobot

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Twitter API
auth = tweepy.OAuthHandler(TWITTER_API_KEY, TWITTER_API_SECRET)
auth.set_access_token(TWITTER_ACCESS_TOKEN, TWITTER_ACCESS_SECRET)
twitter_api = tweepy.API(auth)

# –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ (–º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—ã)
tracked_accounts = ["elonmusk"]  # –ü—Ä–∏–º–µ—Ä —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–ø–∏—Å–∫–∞

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞
bot = Bot(token=TELEGRAM_TOKEN)

# ===== –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê ===== #
def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "üê¶ **Twitter Tracker Bot**\n\n"
        "–û—Ç—Å–ª–µ–∂–∏–≤–∞—é –Ω–æ–≤—ã–µ —Ç–≤–∏—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤.\n\n"
        "üîπ /add username - –¥–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç\n"
        "üîπ /remove username - —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç\n"
        "üîπ /list - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö"
    )

def add_account(update: Update, context: CallbackContext):
    if not context.args:
        update.message.reply_text("‚ùå –£–∫–∞–∂–∏—Ç–µ username (–±–µ–∑ @). –ü—Ä–∏–º–µ—Ä: /add elonmusk")
        return
    
    username = context.args[0].lower()
    if username in tracked_accounts:
        update.message.reply_text(f"‚ùå @{username} —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ!")
    else:
        tracked_accounts.append(username)
        update.message.reply_text(f"‚úÖ @{username} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ!")

def remove_account(update: Update, context: CallbackContext):
    if not context.args:
        update.message.reply_text("‚ùå –£–∫–∞–∂–∏—Ç–µ username (–±–µ–∑ @). –ü—Ä–∏–º–µ—Ä: /remove elonmusk")
        return
    
    username = context.args[0].lower()
    if username in tracked_accounts:
        tracked_accounts.remove(username)
        update.message.reply_text(f"‚úÖ @{username} —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞!")
    else:
        update.message.reply_text(f"‚ùå @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö.")

def list_accounts(update: Update, context: CallbackContext):
    if not tracked_accounts:
        update.message.reply_text("üì≠ –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø—É—Å—Ç.")
    else:
        accounts_list = "\n".join([f"üîπ @{acc}" for acc in tracked_accounts])
        update.message.reply_text(f"üìã **–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:**\n\n{accounts_list}")

# ===== –ü–†–û–í–ï–†–ö–ê –ù–û–í–´–• –¢–í–ò–¢–û–í ===== #
def check_new_tweets(context: CallbackContext):
    if not tracked_accounts:
        return
    
    for username in tracked_accounts:
        try:
            tweets = twitter_api.user_timeline(screen_name=username, count=1, tweet_mode="extended")
            if not tweets:
                continue
                
            latest_tweet = tweets[0]
            if not hasattr(context.bot_data, 'last_tweets'):
                context.bot_data.last_tweets = {}
            
            if username not in context.bot_data.last_tweets or context.bot_data.last_tweets[username] != latest_tweet.id:
                context.bot_data.last_tweets[username] = latest_tweet.id
                tweet_url = f"https://twitter.com/{username}/status/{latest_tweet.id}"
                message = f"üê¶ **–ù–æ–≤—ã–π —Ç–≤–∏—Ç –æ—Ç @{username}**\n\n{latest_tweet.full_text}\n\nüîó {tweet_url}"
                bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ @{username}: {e}")

# ===== –ó–ê–ü–£–°–ö –ë–û–¢–ê ===== #
def main():
    updater = Updater(TELEGRAM_TOKEN)
    dp = updater.dispatcher
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("add", add_account))
    dp.add_handler(CommandHandler("remove", remove_account))
    dp.add_handler(CommandHandler("list", list_accounts))
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–≤–∏—Ç—ã –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
    updater.job_queue.run_repeating(check_new_tweets, interval=60.0, first=0.0)
    
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()